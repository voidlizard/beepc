
# function decl
def test {
	var a 22#
break; : Exits the current while loop with an unspecified return value.
;
	var b = 44;
	puts (fmt "%d %d" a b );
	return a + b;
}

def test2 a b c {
	return a*a + 2*a*b + c*c
}

# function call
def main  {
	var i   = 0;
	var arr = array(20);
	var q   = nth arr 10 ;
	var s   = "JOPA KITA" ;
	ifelse (test > 0) { puts "WHO-HOO!" } {} ;
	if (test > 0) { puts "HAHA"; } ;
	while (i > 0) { i = i-1; } ;
}

# operators
# group expressions: ()

# func decl a = {}
# func stack
# calc stack

# func stack cell:
# RETURN_ADDR
# PARAM1
# PARAM2
# ....
# PARAMN

# func call:
# fpush IP+1
# fpush A
# fpush B
# fpush C
# fcall : FRAME = FSTACK OFFSET
# ....
# fload [A]
# fload [B]
# sum

# R-STACK:
# [RETADDR][STACKFRAME]

# A-STACK:
# [A]
# [B]
# [C]        <- STACKFRAME ( B = STACKFRAME - 1, A = STACKFRAME - 2 )
# [D]        <- D - STACKFRAME + 1


